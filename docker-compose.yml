x-airflow-common: &airflow-common
  image: apache/airflow:2.7.1
  environment:
    - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
    - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
    - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
    - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW_FERNET_KEY}
    - AIRFLOW__CORE__TEST_CONNECTION='Enabled'
    - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=${AIRFLOW_DAGS_PAUSED_AT_CREATION}
    - AIRFLOW__CORE__LOAD_EXAMPLES=${AIRFLOW_LOAD_EXAMPLES}
    - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./scripts:/opt/airflow/scripts

services:
  # PostgreSQL database for storing Airflow metadata
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      retries: 5
    restart: always

  # Redis for Airflow Celery executor
  redis:
    image: redis:7
    container_name: spotify_redis
    ports:
      - "${REDIS_PORT}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always

  # Airflow webserver
  airflow-webserver:
    <<: *airflow-common
    container_name: spotify_airflow_webserver
    depends_on:
      - postgres
      - redis
    ports:
      - "${AIRFLOW_WEBSERVER_PORT}:8080"
    command: webserver
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  # Airflow scheduler
  airflow-scheduler:
    <<: *airflow-common
    container_name: spotify_airflow_scheduler
    depends_on:
      - airflow-webserver
    command: scheduler
    restart: always

  # Airflow worker
  airflow-worker:
    <<: *airflow-common
    container_name: spotify_airflow_worker
    depends_on:
      - airflow-scheduler
    command: celery worker
    restart: always

  # Airflow initialization (runs once to set up the database and create the first user)
  airflow-init:
    <<: *airflow-common
    container_name: spotify_airflow_init
    depends_on:
      - postgres
    environment:
      - _AIRFLOW_DB_MIGRATE=true
      - _AIRFLOW_WWW_USER_CREATE=true
      - _AIRFLOW_WWW_USER_USERNAME=${AIRFLOW_USERNAME}
      - _AIRFLOW_WWW_USER_PASSWORD=${AIRFLOW_PASSWORD}
    command: bash -c "/opt/airflow/scripts/init_airflow_connections.sh && airflow version"
    restart: on-failure

  # Grafana for visualization
  grafana:
    image: grafana/grafana:10.1.0
    container_name: spotify_grafana
    depends_on:
      - postgres
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_INSTALL_PLUGINS=${GRAFANA_PLUGINS}
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    restart: always


volumes:
  postgres_data:
  grafana_data: